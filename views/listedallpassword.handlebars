<style>
    /* Général */
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        background-color: #f4f4f4;
    }

    /* Conteneur principal */
    .principale {
        display: flex;
        height: 100vh;
    }

    /* Icône de menu hamburger */
    .menu-icon {
        position: fixed;
        top: 20px;
        left: 20px;
        width: 35px;
        height: 25px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        cursor: pointer;
        z-index: 1001;
    }

    .bar {
        height: 5px;
        background-color: #ff5722;
        width: 100%;
        margin-bottom: 6px;
    }

    /* Menu latéral */
    .containerleft {
        position: fixed;
        top: 0;
        left: -250px;
        /* Masqué par défaut */
        width: 250px;
        height: 100%;
        background-color: transparent;
        color: white;
        padding-top: 30px;
        display: flex;
        flex-direction: column;
        align-items: center;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        transition: left 0.3s ease;
    }

    .containerleft.open {
        left: 0;
        /* Ouvre le menu */
    }

    .containerleft button {
        background-color: transparent;
        color: #ff5722;
        width: 80%;
        height: 50px;
        border-radius: 15px;
        font-size: 16px;
        margin-bottom: 15px;
        border: none;
        cursor: pointer;
    }

    .containerleft button:hover {
        background-color: #ff5722;
        color: white;
    }

    /* Contenu principal */
    .containerrigth {
        margin-left: 250px;
        flex: 1;
        padding: 20px;
        overflow-y: auto;
    }

    ul#items-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    ul#items-list li {
        background-color: #fff;
        color: #333;
        padding: 15px;
        margin: 10px 0;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        font-size: 16px;
    }

    ul#items-list li:hover {
        background-color: #e6e6e6;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .containerrigth {
            margin-left: 0;
        }

        .containerleft {
            left: -250px;
            /* Menu caché sur mobile */
            background-color: white;
        }

        .containerleft.open {
            left: 0;
            /* Menu visible */
        }
    }

    /* Style des modales */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        font-size: 20px;
        margin-bottom: 15px;
        font-weight: bold;
    }

    .modal-body {
        display: flex;
        flex-direction: column;
    }

    .modal-body input {
        margin-bottom: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .modal-footer {
        text-align: right;
    }

    .btn {
        padding: 10px 20px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn.cancel {
        background-color: #f44336;
    }

    #updateanddelete {
        display: flex;
        flex-direction: row;
        gap: 1rem;
    }

    #updateanddelete button {
        width: 100px;
        margin-top: 20px;
    }

    input {
        border: none;
        text-align: center;
        font-size:large;
        font-family: arial;
        width: max-content;

    }

    span {
        font-size: large;
    }

    /* Responsive Design */
    @media (max-width: 600px) {
        .modal-content {
            width: 90%;
        }
    }

    ul {
        list-style: none;
    }
</style>
</style>
<div class="principale">
    <!-- Icône du menu hamburger -->
    <div class="menu-icon" id="menu-icon">
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
    </div>

    <!-- Menu latéral gauche -->
    <div class="containerleft" id="menu">
        <div id="updateanddelete">
            <button onclick="openModal('delete')">Delete</button>
            <button onclick="openModal('update')">Update</button>
        </div>
        <div class="containerleftone">
            <button class="button" type="button" onclick="getHome()">Home</button>
            <button class="button" type="button" onclick="getNewPassword()">New password</button>
            <button class="button" type="button" onclick="getLogin()">Login</button>
            <button class="button" type="button" onclick="getSignup()">Signup</button>
            <button class="button" type="button" onclick="getLogout()">Logout</button>
        </div>
    </div>

    <!-- Contenu principal -->
    <div class="containerrigth">
        <ul id="items-list">


        </ul>
    </div>
</div>

<!-- Notifications -->
<!-- Modal pour la suppression -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">Suppression du mot de passe</div>
        <div class="modal-body">
            <label for="emailDelete">Email:</label>
            <input type="email" id="emailDelete" placeholder="Entrez votre email">

            <label for="websiteDelete">Website:</label>
            <input type="url" id="websiteDelete" placeholder="Entrez l'URL de votre site">

            <label for="passwordDelete">Mot de passe:</label>
            <input type="password" id="passwordDelete" placeholder="Entrez votre mot de passe">
        </div>
        <div class="modal-footer">
            <button class="btn" onclick="submitDelete()">Supprimer</button>
            <button class="btn cancel" onclick="closeModal('delete')">Annuler</button>
        </div>
    </div>
</div>

<!-- Modal pour la modification -->
<div id="updateModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">Modification du mot de passe</div>
        <div class="modal-body">
            <label for="emailUpdate">Email:</label>
            <input type="email" id="emailUpdate" placeholder="Entrez votre email">

            <label for="oldPassword">Ancien mot de passe:</label>
            <input type="password" id="oldPassword" placeholder="Entrez votre ancien mot de passe">

            <label for="newPassword">Nouveau mot de passe:</label>
            <input type="password" id="newPassword" placeholder="Entrez votre nouveau mot de passe">

            <label for="websiteUpdate">Website:</label>
            <input type="url" id="websiteUpdate" placeholder="Entrez l'URL de votre site">
        </div>
        <div class="modal-footer">
            <button class="btn" onclick="submitUpdate()">Modifier</button>
            <button class="btn cancel" onclick="closeModal('update')">Annuler</button>
        </div>
    </div>
</div>
<!-- Modal pour les alertes de succès / erreur -->
<div id="successModal" class="modal">
    <div class="modal-content">
        <div id="successMessage" class="modal-header"></div>
        <div class="modal-body" id="successDetails"></div>
        <div class="modal-footer">
            <button class="btn" onclick="closeSuccessModal()">OK</button>
        </div>
    </div>
</div>

<script>
    window.onload = () => {
        // Fonction pour ouvrir/fermer le menu hamburger
        const menuIcon = document.getElementById('menu-icon');
        const sideMenu = document.getElementById('menu');
        menuIcon.addEventListener('click', () => {
            sideMenu.classList.toggle('open'); // Ouvre ou ferme le menu
        });

        const dynamicList = document.getElementById('items-list');

        async function printData() {
            // Récupération des données depuis le serveur avec fetch
            const response = await fetch('/api/listedallpassword');
            const data = await response.json();

            // Parcourir les éléments récupérés pour les afficher dans la nouvelle liste
            data.forEach((item, index) => {
                const li = document.createElement('li');

                // Créer des éléments pour afficher chaque propriété de l'item
                const nameSpan = document.createElement('div');
                nameSpan.textContent = `Site: ${item.website} `;

                const label = document.createElement('label');
                label.textContent = 'Mot de passe: ';

                const input = document.createElement('input');
                input.value = `${item.passwordsite}`;
                input.disabled = true;
                input.type = 'password';
                input.classList.add('password');
                input.id = `password-${index}`; // Ajout d'un ID unique pour chaque champ de mot de passe

                const icone = document.createElement('span');
                icone.innerHTML = '&#X1F576;' //'&#X1F648;';
                icone.classList.add('toggle-password');
                icone.id = `toggle-password-${index}`; // Ajout d'un ID unique pour chaque icône

                // Ajout de l'événement de clic sur l'icône pour afficher/masquer le mot de passe
                icone.addEventListener('click', function () {
                    togglePassword(index); // Passer l'index pour cibler l'élément spécifique
                });

                const categorySpan = document.createElement('div');
                categorySpan.textContent = `Categorie: ${item.category}`;

                const emailSpan = document.createElement('div');
                emailSpan.textContent = `Adresse Email: ${item.email}`;

                // Ajouter les éléments 'span' au 'li'
                li.appendChild(nameSpan);
                li.appendChild(label);
                li.appendChild(input);
                li.appendChild(icone);
                li.appendChild(categorySpan);
                li.appendChild(emailSpan);
                dynamicList.appendChild(li);
            });
        }
        // Fonction pour afficher/masquer le mot de passe
        function togglePassword(index) {
            const passwordInput = document.getElementById(`password-${index}`);
            const toggleIcon = document.getElementById(`toggle-password-${index}`);

            // Vérifier si le type de l'input est 'password' ou 'text' pour basculer
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text'; // Afficher le mot de passe
                toggleIcon.innerHTML = "&#X1F441;"; // Modifier l'icône pour indiquer que le mot de passe est visible
            } else {
                passwordInput.type = 'password'; // Masquer le mot de passe
                toggleIcon.innerHTML = '&#X1F576;'//"&#X1F648;"; // Réinitialiser l'icône à son état initial
            }
        }
        // Appel de la fonction pour afficher les données
        printData();
    }
        // Fonction de navigation
        function getHome() {
            window.location.href = "/home";
        }

        function getLogin() {
            window.location.href = '/login';
        }

        function getSignup() {
            window.location.href = '/signup';
        }

        function getNewPassword() {
            window.location.href = '/newpassword';
        }

        function getLogout() {
            window.location.href = '/logout';
        }

        // Ouvrir la modal
        function openModal(type) {
            document.getElementById(type + 'Modal').style.display = 'flex';
        }

        // Fermer la modal
        function closeModal(type) {
            document.getElementById(type + 'Modal').style.display = 'none';
        }

        // Fermer la modal de succès
        function closeSuccessModal() {
            document.getElementById('successModal').style.display = 'none';
        }

        // Afficher l'alerte de succès ou d'erreur
        function showAlert(success, message, details) {
            document.getElementById('successMessage').textContent = success ? "Succès!" : "Erreur!";
            document.getElementById('successDetails').textContent = message + (details ? `: ${details}` : "");
            document.getElementById('successModal').style.display = 'flex';
        }

        // Soumettre les informations pour la suppression avec fetch
        function submitDelete() {
            const email = document.getElementById('emailDelete').value;
            const website = document.getElementById('websiteDelete').value;
            const password = document.getElementById('passwordDelete').value;

            if (!email || !website || !password) {
                showAlert(false, "Tous les champs doivent être remplis !");
                return;
            }

            const data = {
                email: email,
                website: website,
                password: password
            };

            fetch('/delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(true, data.message);
                    } else {
                        showAlert(false, "Erreur lors de la suppression", data.error || "Veuillez réessayer");
                    }
                    closeModal('delete');
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    showAlert(false, "Erreur lors de l'envoi des données");
                    closeModal('delete');
                });
        }

        // Soumettre les informations pour la modification avec fetch
        function submitUpdate() {
            const email = document.getElementById('emailUpdate').value;
            const oldPassword = document.getElementById('oldPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const website = document.getElementById('websiteUpdate').value;

            if (!email || !oldPassword || !newPassword || !website) {
                showAlert(false, "Tous les champs doivent être remplis !");
                return;
            }

            const data = {
                email: email,
                oldPassword: oldPassword,
                newPassword: newPassword,
                website: website
            };

            fetch('/modifyPass', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(true, data.message)
                    } else {
                        showAlert(false, data.error || "Echec de modification Veuillez réessayer");
                    }
                    closeModal('update');
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    showAlert(false, "Erreur lors de l'envoi des données");
                    closeModal('delete');
                });
        }
</script>